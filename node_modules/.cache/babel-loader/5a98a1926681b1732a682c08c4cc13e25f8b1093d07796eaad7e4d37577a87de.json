{"ast":null,"code":"var _jsxFileName = \"D:\\\\product-showcase\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function useCart() {\n  _s();\n  return useContext(CartContext);\n}\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const stored = localStorage.getItem('cart');\n    if (stored) setCart(JSON.parse(stored));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = product => {\n    setCart(prev => {\n      const existing = prev.find(p => p.id === product.id);\n      if (existing) {\n        return prev.map(p => p.id === product.id ? {\n          ...p,\n          quantity: p.quantity + 1\n        } : p);\n      } else {\n        return [...prev, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const updateQuantity = (productId, amount) => {\n    setCart(prev => prev.map(p => p.id === productId ? {\n      ...p,\n      quantity: Math.max(1, p.quantity + amount)\n    } : p));\n  };\n  const removeFromCart = productId => {\n    setCart(prev => prev.filter(p => p.id !== productId));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }, this);\n}\n_s2(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","stored","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","prev","existing","find","p","id","map","quantity","updateQuantity","productId","amount","Math","max","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/product-showcase/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('cart');\r\n    if (stored) setCart(JSON.parse(stored));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product) => {\r\n    setCart(prev => {\r\n      const existing = prev.find(p => p.id === product.id);\r\n      if (existing) {\r\n        return prev.map(p =>\r\n          p.id === product.id ? { ...p, quantity: p.quantity + 1 } : p\r\n        );\r\n      } else {\r\n        return [...prev, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (productId, amount) => {\r\n    setCart(prev =>\r\n      prev.map(p =>\r\n        p.id === productId ? { ...p, quantity: Math.max(1, p.quantity + amount) } : p\r\n      )\r\n    );\r\n  };\r\n\r\nconst removeFromCart = (productId) => {\r\n  setCart(prev => prev.filter(p => p.id !== productId));\r\n  };\r\n\r\n  return (\r\n<CartContext.Provider value={{ cart, addToCart, updateQuantity, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC3C,IAAIF,MAAM,EAAED,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7BT,OAAO,CAACU,IAAI,IAAI;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACpD,IAAIH,QAAQ,EAAE;QACZ,OAAOD,IAAI,CAACK,GAAG,CAACF,CAAC,IACfA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,QAAQ,EAAEH,CAAC,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,CAC7D,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,IAAI,EAAE;UAAE,GAAGD,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;IAC5CnB,OAAO,CAACU,IAAI,IACVA,IAAI,CAACK,GAAG,CAACF,CAAC,IACRA,CAAC,CAACC,EAAE,KAAKI,SAAS,GAAG;MAAE,GAAGL,CAAC;MAAEG,QAAQ,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,CAAC,CAACG,QAAQ,GAAGG,MAAM;IAAE,CAAC,GAAGN,CAC9E,CACF,CAAC;EACH,CAAC;EAEH,MAAMS,cAAc,GAAIJ,SAAS,IAAK;IACpClB,OAAO,CAACU,IAAI,IAAIA,IAAI,CAACa,MAAM,CAACV,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACrD,CAAC;EAED,oBACF1B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAES,SAAS;MAAES,cAAc;MAAEK;IAAe,CAAE;IAAAzB,QAAA,EAC1EA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC/B,GAAA,CA1CeF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}